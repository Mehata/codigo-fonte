void handleFibonacci(){

String resultado = "48119977967797748601297348500815018655930039402247562987920792394053482120120181184392058171552920771819539454015210856023819104959615403617405822393318558576983297217362852911839620580585105733393432756454681343015623186071034162063654327583623869562294696523642071014543963720849661000017935942034009544457572476595324104993115776865162167347452977231785869792310001250731882855217277183547824189816227436642613685018523664490459535334983121605066281248444341001527919173816928837435182418504323762736733645474088036208334011940470298425964963684332042872946404334920745048796446736262663252388469329418274822550268766358228237552409455651287036805954686160711153145003585580035352980057508856312285292460375277077382425009314585381948532545536939256284648859439893307888193215820258945577245459970850486781381942179287073840750966910116727463623285543052535683294564513661052943708347424729571347605994055476793925544392244634011500844298659622122998472475052787422080186534668400039464208835545765133175825639911468742045584072954333993105175837289100397048656312222524232258660798696857442344683939353570641997738145558433841705009682318777575940002885855755174915063119669610892815396336816442378025663049622546298885905553678558992156962874043953573800890991964517032940577555857768617189408420128214886195099900286961598552366378999340180825514482255985835464568972636427659216474825257956250511094908305834877244799854798796487059580613923231898339780738440659519143687505794430134135566442609254599676608121826514099719897218778918595126238447860940462487863447466226952519793747771746934985347914430441950368708116664162687954322748707291879164244064733225842177046501217235771651803914313209498553209766845321104419588966189946604129585954433094267970464516213298413507308084049343719133660858106297366385970355589813751582349374233435728321620002382897900556196702247901743233860469898586625108161185192709910749173966856426232935611388045366352426582701725937735645674312113131822330012143006769153433202039697207598985566618314142794671524757555907800213381954638344539474187051646310378893461490227822296909147575887828997836807141054996452231656363513731160565127797577118244480676004827261058770419311004497993772684655232554578026173463880866765201463623879312562585660563903317111339406233978879752583223516688935016832387925631428367159147022717096144666726580548452851926148489924122397528001230775267137018151282813370150971823301246750727110811851518689071409085428635645239500456952917130930787338294057847664414502609265864694282697312602996118452498572503154018927497487912998951479412783502650243818627044174068800508295816223663035833004418549799880483449868874511327748649803460693338083348882845931176368262409802467014888463960219270508671037519889051123418423132365059945169404196572197963342389837615952812688460937774348082975331149087139382886741092859584147206868463326055739307527769654669125398658546496322204344501715835922796145468579746208236672569797561679519305797661322555345750426769534418920197833279319066592441890651629920980821643438142627867113412458831023171515159281792665165497623544851077593688503882423462285284216858332297060325800157382935550987339316032421515319386423073028315728959000798034448398022578713322987438653531230371988919660467122594423644806205192897816473548316093000761327822786270551658161244750296211845215438807297552860075352469986788927672770615892236300426846271712669393830733759215532205131272693448821060292981225474739720371838474049104372094238469735782111050551909654412089112140773010851619401756312487795441326116491604286479267994570512602025430575596073964049103676383115608042369215163211240287980072484494624872713937160839227066367503257558670820715812396831800259835860764428561584941072799695243828199348402424655508468534388320367223936957999229019193125187548584189455602800052131059343333245144836147632066991978652011977878412511524378580990777650035318305639116299350212784800782544604834994021082955537491066545396593001959257153700113697358546527271317199393364666629175325623967481423220117208793290386509398016";

 if ( (server.arg("answer") == resultado) and logged_in) {

  fase2 = true;
  server.sendHeader("Cache-Control", "no-cache, no-store, must-revalidate");
  server.sendHeader("Pragma", "no-cache");
  server.sendHeader("Expires", "-1");
  server.setContentLength(CONTENT_LENGTH_UNKNOWN);
  server.send(200, "text/html", ""); // Empty content inhibits Content-length header so we have to close the socket ourselves.
  server.sendContent("<html><head></head><body>");
  ShowMenu();
  server.sendContent(
      "<h2> Congratulations, you pass.</h2>"
      "<p> Don't cut the power, it has an auxilliary power supply with, but you will sofer a timer penalty</p>"
      "<a href='/admin'> <button> OK </button> </a>"
      "<br>"
      
  );
 }
 else{
            server.sendHeader("Location", "/admin", true);
            server.sendHeader("Cache-Control", "no-cache, no-store, must-revalidate");
            server.sendHeader("Pragma", "no-cache");
            server.sendHeader("Expires", "-1");
            server.send ( 302, "text/plain", "");  // Empty content inhibits Content-length header so we have to close the socket ourselves.
            server.client().stop(); // Stop is needed because we sent no content length 
 }
  server.client().stop(); // Stop is needed because we sent no content length
}

